public class SuiteConfort extends Quarto implements Manutencao , Atendimento {
	private boolean hidro;
	public SuiteConfort (){
		super(int andar, char identificador, int qntHosp, boolean reservado, Usuario usuario, boolean limpo, boolean checkin, String tipoCama, float valorBase, boolean cafeDaManha, String vista, float fatura);
		boolean hidro = hidro;
	}
	@Override
	public boolean checkin(Quarto quarto) {
		if (super.isLimpo() && !super.isReservado() && !super.isCheck_in()){
			this.check_in = true;
		}
		return false;
	}
	@Override
	public boolean checkout(Quarto quarto) {
		float tot;
		tot = quarto.getValorBase() + quarto.getFatura();
		return false;
	}

	@Override
	public String ConsultarDisponiveis(vetQuartos listaQuartos) {
		if ( !super.isReservado() && !super.isCheck_in()) {
			System.out.println(this.getIdentificador());
		}
		return null;
	}

	@Override
	public boolean fazerReserva(Quarto quartos) {
		if (!super.isReservado() && !super.isCheck_in()) {
			super.setReservado(true);
			System.out.println("Reserva feita");
		} else {
			System.out.println("Nao foi possivel reservar");
		}
		return false;
	}

	@Override
	public int limpar(Quarto quarto) {
		if(isLimpo() == false) {
			setLimpo(true);
			System.out.println("Quarto limpo\n");
		}
		if(isCheck_in() == true) {
			System.out.println("Valor de R$15,00 será cobrado no Checkout\n");
			return 15;
		}else {
			return 0;
		}
	}
		@Override
		public int TrocarChuveiro(Quarto quarto) {
			if(isCheck_in() == true) {
				System.out.println("Valor de R$70,00 será cobrado no Checkout\n");
				return 70;
			}else {
				return 0;
			}
		}

		@Override
		public int AbastecerToalha(Quarto quarto) {
			if(isCheck_in() == true) {
				System.out.println("Valor de R$40,00 será cobrado no Checkout\n");
				return 40;
			}else {
				return 0;
		}

	}
